fn f1(a: i64) -> i64 {
	println!("f1({a})");
	return a;
}

fn f2(a: i64, b: i64) -> i64 {
	println!("f2({a}, {b})");
	return a + b;
}

fn f3(a: i64, b: i64, c: i64) -> i64 {
	println!("f3({a}, {b}, {c})");
	return a + b + c;
}

fn f4(a: i64, b: i64, c: i64, d: i64) -> i64{
	println!("f4({a}, {b}, {c}, {d})");
	return a + b + c + d;
}

fn f5(a: i64, b: i64, c: i64, d: i64, e: i64) -> i64 {
	println!("f5({a}, {b}, {c}, {d}, {e})");
	return a + b + c + d + e;
}

fn f6(a: i64, b: i64, c: i64, d: i64, e: i64, f: i64) -> i64 {
	println!("f6({a}, {b}, {c}, {d}, {e}, {f})");
	return a + b + c + d + e + f;
}

fn f7(a: i64, b: i64, c: i64, d: i64, e: i64, f: i64, g: i64) -> i64 {
	println!("f7({a}, {b}, {c}, {d}, {e}, {f}, {g})");
	return a + b + c + d + e + f + g;
}

fn main() {
	let mut _z : i64;
	_z = f1(0x1000000000000001);
	_z = f2(0x1000000000000001, 0x1000000000000002);
	_z = f3(0x1000000000000001, 0x1000000000000002, 0x1000000000000003);
	_z = f4(0x1000000000000001, 0x1000000000000002, 0x1000000000000003, 0x1000000000000004);	
	_z = f5(0x1000000000000001, 0x1000000000000002, 0x1000000000000003, 0x1000000000000004, 
	        1000000000000000005);	
	_z = f6(0x1000000000000001, 0x1000000000000002, 0x1000000000000003, 0x1000000000000004,
	        0x1000000000000005, 0x1000000000000006);
	_z = f7(0x1000000000000001, 0x1000000000000002, 0x1000000000000003, 0x1000000000000004, 
	        0x1000000000000005, 0x1000000000000006, 0x1000000000000007);	
}
